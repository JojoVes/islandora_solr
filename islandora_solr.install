<?php

/**
 * @file
 * Implementations of installation hooks.
 */

use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\Component\Utility\Xss;

/**
 * Implements hook_requirements().
 */
function islandora_solr_requirements($phase) {
  $t = 't';
  $requirements = [];
  require_once dirname(__FILE__) . '/src/SolrPhpClient/Apache/Solr/Apache_Solr_Service.php';
  if ($phase == 'install') {
    if (!class_exists('Drupal\islandora_solr\SolrPhpClient\Apache\Solr\Apache_Solr_Service')) {
      $requirements['islandora_solr'] = [
        'title' => $t('Missing Apache Client'),
        'description' => $t('This module requires the <a href="@url">Apache Solr PHP Client</a>. Please install the client in the root directory of this module before continuing.', [
          '@url' => 'http://code.google.com/p/solr-php-client',
        ]),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }
  return $requirements;
}

/**
 * Implements hook_install().
 */
function islandora_solr_install() {
  $t = 't';
  $message = $t(
    'Islandora Solr @link',
    [
      '@link' => Link::fromTextAndUrl($t('configuration page'), Url::fromRoute('islandora_solr.admin_settings'))->toString(),
    ]
  );
  drupal_set_message(Xss::filter($message));
}

/**
 * Implements hook_schema().
 */
function islandora_solr_schema() {
  $schema['islandora_solr_collection_sort_strings'] = [
    'description' => 'Table that stores sort strings for collection objects.',
    'fields' => [
      'collection_pid' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The collection PID',
      ],
      'sort_string' => [
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
        'description' => 'Sort string for the collection',
      ],
    ],
    'primary key' => [['collection_pid', 191]],
  ];
  return $schema;
}
